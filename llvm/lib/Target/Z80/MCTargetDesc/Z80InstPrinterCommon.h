//===- Z80InstPrinterCommon.h - Convert Z80 MCInst to assembly --*- C++ -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This file includes code common for rendering MCInst instances as (e)Z80
// assembly.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_Z80_INSTPRINTER_Z80INSTPRINTERCOMMON_H
#define LLVM_LIB_TARGET_Z80_INSTPRINTER_Z80INSTPRINTERCOMMON_H

#include "llvm/MC/MCInstPrinter.h"

namespace llvm {
  class Z80InstPrinterCommon : public MCInstPrinter {
  public:
    Z80InstPrinterCommon(const MCAsmInfo &MAI, const MCInstrInfo &MII,
                       const MCRegisterInfo &MRI)
        : MCInstPrinter(MAI, MII, MRI) {}

    void printRegName(raw_ostream &OS, unsigned RegNo) const override;
    void printInst(const MCInst *MI, uint64_t Address, StringRef Annot,
                   const MCSubtargetInfo &STI, raw_ostream &OS) override;

    // Autogenerated by tblgen.
    virtual void printInstruction(const MCInst *MI, uint64_t Address,
                                  raw_ostream &OS) = 0;
    virtual StringRef getRegName(unsigned RegNo) const = 0;

    void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &OS);
    void printCCOperand(const MCInst *MI, unsigned OpNo, raw_ostream &OS);

    void printMem(const MCInst *MI, unsigned OpNo, raw_ostream &OS);
    void printPtr(const MCInst *MI, unsigned OpNo, raw_ostream &OS);
    void printOff(const MCInst *MI, unsigned OpNo, raw_ostream &OS);
    void printAddr(const MCInst *MI, unsigned OpNo, raw_ostream &OS);
    void printBit(const MCInst *MI, unsigned OpNo, raw_ostream &OS);
  };
}

#endif
